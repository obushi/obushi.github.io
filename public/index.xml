<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>大伏 仙泰</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on 大伏 仙泰</description>
    <generator>Hugo -- 0.147.4</generator>
    <language>ja</language>
    <copyright>Noriyasu Obushi</copyright>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://localhost:1313/titan-arum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/titan-arum/</guid>
      <description>&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;ja&#34;&gt;
&lt;head&gt;
&lt;meta charset=&#34;UTF-8&#34; /&gt;
&lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34; /&gt;
&lt;title&gt;ショクダイオオコンニャクAR&lt;/title&gt;
&lt;!-- Import the component --&gt;
&lt;script
    type=&#34;module&#34;
    src=&#34;https://unpkg.com/@google/model-viewer/dist/model-viewer.min.js&#34;
&gt;&lt;/script&gt;
&lt;script
    nomodule
    src=&#34;https://unpkg.com/@google/model-viewer/dist/model-viewer-legacy.js&#34;
&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;style&gt;
  html {
    height: 100%;
  }
  body {
    height: 100%;
  }
  model-viewer{
    width:100%;
    height:100%;
  }
  .dot{
    display: block;
    position: absolute;
    width: 20px;
    height: 20px;
    transform: translateX(-50%) translateY(-50%);
    border-radius: 50%;
    box-shadow: 0px 0px 10px 3px rgba(0, 0, 0, 0.7), 0px 0px 5px 1px rgba(0, 0, 0, 0.8);
    border: 1px solid rgba(255, 255, 255, 0.9);
    background-color: rgba(0, 0, 0, 0.7);
  }
&lt;/style&gt;
&lt;model-viewer ar id=&#34;prompt-demo&#34; camera-controls touch-action=&#34;pan-y&#34; interaction-prompt=&#34;none&#34; src=&#34;./titan-arum.glb&#34; alt=&#34;Titan Arum&#34; shadow-intensity=&#34;1&#34; ar&gt;
    &lt;div class=&#34;dot&#34; slot=&#34;finger0&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;dot&#34; slot=&#34;finger1&#34;&gt;&lt;/div&gt;
    &lt;button slot=&#34;ar-button&#34; style=&#34;background-color: white; border-radius: 4px; border: none; position: absolute; top: 16px; right: 16px; &#34;&gt;
        ARで表示
    &lt;/button&gt;
&lt;/model-viewer&gt;

&lt;script&gt;
  const modelViewerPrompt = document.querySelector(&#34;#prompt-demo&#34;);
  
  const PROMT_MS = 3000;
  const REPEAT_MS = 5000;

  const finger0 = {
    x: {
      initialValue: 0.6,
      keyframes: [
        {frames: 1, value: 0.7},
        {frames: 1, value: 0.5},
        {frames: 1, value: 0.7},
        {frames: 1, value: 0.6},
      ]
    },
    y: {
      initialValue: 0.45,
      keyframes: [
        {frames: 1, value: 0.4},
        {frames: 1, value: 0.3},
        {frames: 1, value: 0.4},
        {frames: 1, value: 0.45},
      ]
    }
  };

  const finger1 = {
    x: {
      initialValue: 0.4,
      keyframes: [
        {frames: 1, value: 0.3},
        {frames: 1, value: 0.1},
        {frames: 1, value: 0.3},
        {frames: 1, value: 0.4},
      ]
    },
    y: {
      initialValue: 0.55,
      keyframes: [
        {frames: 1, value: 0.6},
        {frames: 1, value: 0.5},
        {frames: 1, value: 0.6},
        {frames: 1, value: 0.55},
      ]
    }
  };

  let hasInteracted = false;

  const prompt = () =&gt; {
    if (!hasInteracted) {
      modelViewerPrompt.interact(PROMT_MS, finger0, finger1);
      setTimeout(prompt, REPEAT_MS);
    }
  };

  modelViewerPrompt.addEventListener(&#39;poster-dismissed&#39;, () =&gt; {
    prompt();
  }, {once: true});

  const interacted = (event) =&gt; {
    if (event.detail.source === &#39;user-interaction&#39;) {
      hasInteracted = true;
      modelViewerPrompt.removeEventListener(&#39;camera-change&#39;, interacted);
    }
  };

  modelViewerPrompt.addEventListener(&#39;camera-change&#39;, interacted);
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
  </channel>
</rss>
